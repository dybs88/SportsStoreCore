@model EditRoleViewModel
@{
    ViewData["Title"] = "Edycja roli";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>Edytuj rolę @Model.Role.Name</h2>
<div asp-validation-summary="All" class="text-danger"></div>
@if (Model.Role.Name != IdentityRoleNames.Clients)
{
    <h4>Użytkownicy:</h4>
    <table class="table table-striped" table-sm>
        <tr>
            <th>Login</th>
            <th>Email</th>
            <th>Imię</th>
            <th>Nazwisko</th>
            <th>Data rejestracji</th>
            <th>Akcja</th>
        </tr>
        @foreach (var user in Model.UsersInRole)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.CreationDate</td>
                <td>
                    <a class="btn btn-primary btn-sm" asp-action="EditUser" asp-controller="User">Edytuj</a>
                    <a class="btn btn-danger btn-sm" asp-action="DeleteFromRole" asp-controller="Role" asp-route-roleName="@Model.Role.Name" asp-route-userId="@user.Id">Usuń z roli</a>
                </td>
            </tr>
        }
    </table>
}


<form asp-action="EditRole" method="post">
    <input type="hidden" name="Role.Name" value="@Model.Role.Name" />
    <h4>Uprawnienia:</h4>
    @await Component.InvokeAsync("PermissionTable", new { role = Model.Role })
    <button type="submit" class="btn btn-success">Zapisz</button>
    <a class="btn btn-secondary" asp-action="List" asp-controller="Role">Anuluj</a>
</form>

